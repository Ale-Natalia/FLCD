Nonterminals useless in grammar

   maintype
   arraydecl
   array_val
   array_terms
   array_terms_rest
   type

   
   term


Terminals unused in grammar

   len
   sin
   CHAR
   constant
   op_eqeq
   sep_open_br
   sep_closed_br
   sep_col
   sep_com


Rules useless in grammar

   73 maintype: BOOLEAN
   74         | CHAR
   75         | STRING
   76         | INTEGER
   77         | FLOAT

   78 arraydecl: sep_open_br maintype sep_closed_br sep_open_par INTEGER sep_closed_par
   79          | array_val

   80 array_val: sep_open_br array_terms sep_closed_br

   81 array_terms: term array_terms_rest

   82 array_terms_rest: %empty
   83                 | sep_com array_terms

   84 type: maintype
   85     | arraydecl

   86 term: arith_term
   87     | bool_term
   88     | str_term


Rules useless in parser due to conflicts

    3 decllist_rest: %empty


State 5 conflicts: 1 shift/reduce
State 91 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: decllist sep_semicol cmpdstmt

    2 decllist: declaration decllist_rest

    3 decllist_rest: %empty
    4              | sep_semicol decllist

    5 declaration: decl_keyword id declaration_rest

    6 declaration_rest: sep_semicol
    7                 | op_eq expression sep_semicol

    8 decl_keyword: let
    9             | const

   10 cmpdstmt: stmtlist

   11 stmtlist: stmt sep_semicol stmtlist_rest

   12 stmtlist_rest: %empty
   13              | stmtlist

   14 stmt: simplstmt
   15     | structstmt

   16 simplstmt: assignstmt
   17          | iostmt

   18 assignstmt: id assignstmt_rest

   19 assignstmt_rest: op_eq expression
   20                | arith_assign_sign arith_expression
   21                | op_pluseq str_expression
   22                | bool_assign_sign bool_expression

   23 arith_assign_sign: op_pluseq
   24                  | op_minuseq
   25                  | op_muleq
   26                  | op_diveq
   27                  | op_modeq

   28 bool_assign_sign: op_oreq
   29                 | op_andeq

   30 expression: arith_expression
   31           | str_expression
   32           | bool_expression

   33 arith_expression: arith_term arith_expression_rest

   34 arith_expression_rest: %empty
   35                      | arith_op arith_expression

   36 arith_term: INTEGER
   37           | FLOAT
   38           | factor

   39 arith_op: op_mul
   40         | op_plus
   41         | op_minus
   42         | op_div
   43         | op_mod

   44 str_expression: STRING str_expression_rest

   45 str_expression_rest: %empty
   46                    | str_op str_term

   47 str_term: STRING

   48 str_op: op_plus

   49 bool_expression: bool_term bool_expression_rest

   50 bool_expression_rest: %empty
   51                     | bool_op bool_expression

   52 bool_term: BOOLEAN

   53 bool_op: op_and
   54        | op_or

   55 factor: sep_open_par expression sep_closed_par
   56       | id

   57 iostmt: read sep_open_par id sep_closed_par
   58       | print sep_open_par id sep_closed_par

   59 structstmt: cmpdstmt
   60           | ifstmt
   61           | whilestmt

   62 ifstmt: if condition then sep_open_curl stmt sep_closed_curl ifstmt_rest

   63 ifstmt_rest: %empty
   64            | else sep_open_curl stmt sep_closed_curl

   65 whilestmt: while condition sep_open_curl stmt sep_closed_curl

   66 condition: expression relation expression

   67 relation: op_lt
   68         | op_lte
   69         | op_eq
   70         | op_dif
   71         | op_gt
   72         | op_gte


Terminals, with rules where they appear

$end (0) 0
error (256)
let (258) 8
const (259) 9
if (260) 62
then (261) 62
else (262) 64
while (263) 65
read (264) 57
len (265)
sin (266)
print (267) 58
BOOLEAN (268) 52
CHAR (269)
STRING (270) 44 47
INTEGER (271) 36
FLOAT (272) 37
id (273) 5 18 56 57 58
constant (274)
op_plus (275) 40 48
op_minus (276) 41
op_mul (277) 39
op_div (278) 42
op_eq (279) 7 19 69
op_gte (280) 72
op_lte (281) 68
op_gt (282) 71
op_lt (283) 67
op_or (284) 54
op_and (285) 53
op_mod (286) 43
op_eqeq (287)
op_dif (288) 70
op_pluseq (289) 21 23
op_minuseq (290) 24
op_muleq (291) 25
op_diveq (292) 26
op_modeq (293) 27
op_andeq (294) 29
op_oreq (295) 28
sep_open_par (296) 55 57 58
sep_closed_par (297) 55 57 58
sep_open_br (298)
sep_closed_br (299)
sep_open_curl (300) 62 64 65
sep_closed_curl (301) 62 64 65
sep_col (302)
sep_semicol (303) 1 4 6 7 11
sep_com (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
decllist (52)
    on left: 2, on right: 1 4
decllist_rest (53)
    on left: 3 4, on right: 2
declaration (54)
    on left: 5, on right: 2
declaration_rest (55)
    on left: 6 7, on right: 5
decl_keyword (56)
    on left: 8 9, on right: 5
cmpdstmt (57)
    on left: 10, on right: 1 59
stmtlist (58)
    on left: 11, on right: 10 13
stmtlist_rest (59)
    on left: 12 13, on right: 11
stmt (60)
    on left: 14 15, on right: 11 62 64 65
simplstmt (61)
    on left: 16 17, on right: 14
assignstmt (62)
    on left: 18, on right: 16
assignstmt_rest (63)
    on left: 19 20 21 22, on right: 18
arith_assign_sign (64)
    on left: 23 24 25 26 27, on right: 20
bool_assign_sign (65)
    on left: 28 29, on right: 22
expression (66)
    on left: 30 31 32, on right: 7 19 55 66
arith_expression (67)
    on left: 33, on right: 20 30 35
arith_expression_rest (68)
    on left: 34 35, on right: 33
arith_term (69)
    on left: 36 37 38, on right: 33
arith_op (70)
    on left: 39 40 41 42 43, on right: 35
str_expression (71)
    on left: 44, on right: 21 31
str_expression_rest (72)
    on left: 45 46, on right: 44
str_term (73)
    on left: 47, on right: 46
str_op (74)
    on left: 48, on right: 46
bool_expression (75)
    on left: 49, on right: 22 32 51
bool_expression_rest (76)
    on left: 50 51, on right: 49
bool_term (77)
    on left: 52, on right: 49
bool_op (78)
    on left: 53 54, on right: 51
factor (79)
    on left: 55 56, on right: 38
iostmt (80)
    on left: 57 58, on right: 17
structstmt (81)
    on left: 59 60 61, on right: 15
ifstmt (82)
    on left: 62, on right: 60
ifstmt_rest (83)
    on left: 63 64, on right: 62
whilestmt (84)
    on left: 65, on right: 61
condition (85)
    on left: 66, on right: 62 65
relation (86)
    on left: 67 68 69 70 71 72, on right: 66


State 0

    0 $accept: . program $end

    let    shift, and go to state 1
    const  shift, and go to state 2

    program       go to state 3
    decllist      go to state 4
    declaration   go to state 5
    decl_keyword  go to state 6


State 1

    8 decl_keyword: let .

    $default  reduce using rule 8 (decl_keyword)


State 2

    9 decl_keyword: const .

    $default  reduce using rule 9 (decl_keyword)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: decllist . sep_semicol cmpdstmt

    sep_semicol  shift, and go to state 8


State 5

    2 decllist: declaration . decllist_rest

    sep_semicol  shift, and go to state 9

    sep_semicol  [reduce using rule 3 (decllist_rest)]

    decllist_rest  go to state 10


State 6

    5 declaration: decl_keyword . id declaration_rest

    id  shift, and go to state 11


State 7

    0 $accept: program $end .

    $default  accept


State 8

    1 program: decllist sep_semicol . cmpdstmt

    if     shift, and go to state 12
    while  shift, and go to state 13
    read   shift, and go to state 14
    print  shift, and go to state 15
    id     shift, and go to state 16

    cmpdstmt    go to state 17
    stmtlist    go to state 18
    stmt        go to state 19
    simplstmt   go to state 20
    assignstmt  go to state 21
    iostmt      go to state 22
    structstmt  go to state 23
    ifstmt      go to state 24
    whilestmt   go to state 25


State 9

    4 decllist_rest: sep_semicol . decllist

    let    shift, and go to state 1
    const  shift, and go to state 2

    decllist      go to state 26
    declaration   go to state 5
    decl_keyword  go to state 6


State 10

    2 decllist: declaration decllist_rest .

    $default  reduce using rule 2 (decllist)


State 11

    5 declaration: decl_keyword id . declaration_rest

    op_eq        shift, and go to state 27
    sep_semicol  shift, and go to state 28

    declaration_rest  go to state 29


State 12

   62 ifstmt: if . condition then sep_open_curl stmt sep_closed_curl ifstmt_rest

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 36
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42
    condition         go to state 43


State 13

   65 whilestmt: while . condition sep_open_curl stmt sep_closed_curl

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 36
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42
    condition         go to state 44


State 14

   57 iostmt: read . sep_open_par id sep_closed_par

    sep_open_par  shift, and go to state 45


State 15

   58 iostmt: print . sep_open_par id sep_closed_par

    sep_open_par  shift, and go to state 46


State 16

   18 assignstmt: id . assignstmt_rest

    op_eq       shift, and go to state 47
    op_pluseq   shift, and go to state 48
    op_minuseq  shift, and go to state 49
    op_muleq    shift, and go to state 50
    op_diveq    shift, and go to state 51
    op_modeq    shift, and go to state 52
    op_andeq    shift, and go to state 53
    op_oreq     shift, and go to state 54

    assignstmt_rest    go to state 55
    arith_assign_sign  go to state 56
    bool_assign_sign   go to state 57


State 17

    1 program: decllist sep_semicol cmpdstmt .
   59 structstmt: cmpdstmt .

    sep_semicol  reduce using rule 59 (structstmt)
    $default     reduce using rule 1 (program)


State 18

   10 cmpdstmt: stmtlist .

    $default  reduce using rule 10 (cmpdstmt)


State 19

   11 stmtlist: stmt . sep_semicol stmtlist_rest

    sep_semicol  shift, and go to state 58


State 20

   14 stmt: simplstmt .

    $default  reduce using rule 14 (stmt)


State 21

   16 simplstmt: assignstmt .

    $default  reduce using rule 16 (simplstmt)


State 22

   17 simplstmt: iostmt .

    $default  reduce using rule 17 (simplstmt)


State 23

   15 stmt: structstmt .

    $default  reduce using rule 15 (stmt)


State 24

   60 structstmt: ifstmt .

    $default  reduce using rule 60 (structstmt)


State 25

   61 structstmt: whilestmt .

    $default  reduce using rule 61 (structstmt)


State 26

    4 decllist_rest: sep_semicol decllist .

    $default  reduce using rule 4 (decllist_rest)


State 27

    7 declaration_rest: op_eq . expression sep_semicol

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 59
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42


State 28

    6 declaration_rest: sep_semicol .

    $default  reduce using rule 6 (declaration_rest)


State 29

    5 declaration: decl_keyword id declaration_rest .

    $default  reduce using rule 5 (declaration)


State 30

   52 bool_term: BOOLEAN .

    $default  reduce using rule 52 (bool_term)


State 31

   44 str_expression: STRING . str_expression_rest

    op_plus  shift, and go to state 60

    $default  reduce using rule 45 (str_expression_rest)

    str_expression_rest  go to state 61
    str_op               go to state 62


State 32

   36 arith_term: INTEGER .

    $default  reduce using rule 36 (arith_term)


State 33

   37 arith_term: FLOAT .

    $default  reduce using rule 37 (arith_term)


State 34

   56 factor: id .

    $default  reduce using rule 56 (factor)


State 35

   55 factor: sep_open_par . expression sep_closed_par

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 63
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42


State 36

   66 condition: expression . relation expression

    op_eq   shift, and go to state 64
    op_gte  shift, and go to state 65
    op_lte  shift, and go to state 66
    op_gt   shift, and go to state 67
    op_lt   shift, and go to state 68
    op_dif  shift, and go to state 69

    relation  go to state 70


State 37

   30 expression: arith_expression .

    $default  reduce using rule 30 (expression)


State 38

   33 arith_expression: arith_term . arith_expression_rest

    op_plus   shift, and go to state 71
    op_minus  shift, and go to state 72
    op_mul    shift, and go to state 73
    op_div    shift, and go to state 74
    op_mod    shift, and go to state 75

    $default  reduce using rule 34 (arith_expression_rest)

    arith_expression_rest  go to state 76
    arith_op               go to state 77


State 39

   31 expression: str_expression .

    $default  reduce using rule 31 (expression)


State 40

   32 expression: bool_expression .

    $default  reduce using rule 32 (expression)


State 41

   49 bool_expression: bool_term . bool_expression_rest

    op_or   shift, and go to state 78
    op_and  shift, and go to state 79

    $default  reduce using rule 50 (bool_expression_rest)

    bool_expression_rest  go to state 80
    bool_op               go to state 81


State 42

   38 arith_term: factor .

    $default  reduce using rule 38 (arith_term)


State 43

   62 ifstmt: if condition . then sep_open_curl stmt sep_closed_curl ifstmt_rest

    then  shift, and go to state 82


State 44

   65 whilestmt: while condition . sep_open_curl stmt sep_closed_curl

    sep_open_curl  shift, and go to state 83


State 45

   57 iostmt: read sep_open_par . id sep_closed_par

    id  shift, and go to state 84


State 46

   58 iostmt: print sep_open_par . id sep_closed_par

    id  shift, and go to state 85


State 47

   19 assignstmt_rest: op_eq . expression

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 86
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42


State 48

   21 assignstmt_rest: op_pluseq . str_expression
   23 arith_assign_sign: op_pluseq .

    STRING  shift, and go to state 31

    $default  reduce using rule 23 (arith_assign_sign)

    str_expression  go to state 87


State 49

   24 arith_assign_sign: op_minuseq .

    $default  reduce using rule 24 (arith_assign_sign)


State 50

   25 arith_assign_sign: op_muleq .

    $default  reduce using rule 25 (arith_assign_sign)


State 51

   26 arith_assign_sign: op_diveq .

    $default  reduce using rule 26 (arith_assign_sign)


State 52

   27 arith_assign_sign: op_modeq .

    $default  reduce using rule 27 (arith_assign_sign)


State 53

   29 bool_assign_sign: op_andeq .

    $default  reduce using rule 29 (bool_assign_sign)


State 54

   28 bool_assign_sign: op_oreq .

    $default  reduce using rule 28 (bool_assign_sign)


State 55

   18 assignstmt: id assignstmt_rest .

    $default  reduce using rule 18 (assignstmt)


State 56

   20 assignstmt_rest: arith_assign_sign . arith_expression

    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    arith_expression  go to state 88
    arith_term        go to state 38
    factor            go to state 42


State 57

   22 assignstmt_rest: bool_assign_sign . bool_expression

    BOOLEAN  shift, and go to state 30

    bool_expression  go to state 89
    bool_term        go to state 41


State 58

   11 stmtlist: stmt sep_semicol . stmtlist_rest

    if     shift, and go to state 12
    while  shift, and go to state 13
    read   shift, and go to state 14
    print  shift, and go to state 15
    id     shift, and go to state 16

    $default  reduce using rule 12 (stmtlist_rest)

    cmpdstmt       go to state 90
    stmtlist       go to state 91
    stmtlist_rest  go to state 92
    stmt           go to state 19
    simplstmt      go to state 20
    assignstmt     go to state 21
    iostmt         go to state 22
    structstmt     go to state 23
    ifstmt         go to state 24
    whilestmt      go to state 25


State 59

    7 declaration_rest: op_eq expression . sep_semicol

    sep_semicol  shift, and go to state 93


State 60

   48 str_op: op_plus .

    $default  reduce using rule 48 (str_op)


State 61

   44 str_expression: STRING str_expression_rest .

    $default  reduce using rule 44 (str_expression)


State 62

   46 str_expression_rest: str_op . str_term

    STRING  shift, and go to state 94

    str_term  go to state 95


State 63

   55 factor: sep_open_par expression . sep_closed_par

    sep_closed_par  shift, and go to state 96


State 64

   69 relation: op_eq .

    $default  reduce using rule 69 (relation)


State 65

   72 relation: op_gte .

    $default  reduce using rule 72 (relation)


State 66

   68 relation: op_lte .

    $default  reduce using rule 68 (relation)


State 67

   71 relation: op_gt .

    $default  reduce using rule 71 (relation)


State 68

   67 relation: op_lt .

    $default  reduce using rule 67 (relation)


State 69

   70 relation: op_dif .

    $default  reduce using rule 70 (relation)


State 70

   66 condition: expression relation . expression

    BOOLEAN       shift, and go to state 30
    STRING        shift, and go to state 31
    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    expression        go to state 97
    arith_expression  go to state 37
    arith_term        go to state 38
    str_expression    go to state 39
    bool_expression   go to state 40
    bool_term         go to state 41
    factor            go to state 42


State 71

   40 arith_op: op_plus .

    $default  reduce using rule 40 (arith_op)


State 72

   41 arith_op: op_minus .

    $default  reduce using rule 41 (arith_op)


State 73

   39 arith_op: op_mul .

    $default  reduce using rule 39 (arith_op)


State 74

   42 arith_op: op_div .

    $default  reduce using rule 42 (arith_op)


State 75

   43 arith_op: op_mod .

    $default  reduce using rule 43 (arith_op)


State 76

   33 arith_expression: arith_term arith_expression_rest .

    $default  reduce using rule 33 (arith_expression)


State 77

   35 arith_expression_rest: arith_op . arith_expression

    INTEGER       shift, and go to state 32
    FLOAT         shift, and go to state 33
    id            shift, and go to state 34
    sep_open_par  shift, and go to state 35

    arith_expression  go to state 98
    arith_term        go to state 38
    factor            go to state 42


State 78

   54 bool_op: op_or .

    $default  reduce using rule 54 (bool_op)


State 79

   53 bool_op: op_and .

    $default  reduce using rule 53 (bool_op)


State 80

   49 bool_expression: bool_term bool_expression_rest .

    $default  reduce using rule 49 (bool_expression)


State 81

   51 bool_expression_rest: bool_op . bool_expression

    BOOLEAN  shift, and go to state 30

    bool_expression  go to state 99
    bool_term        go to state 41


State 82

   62 ifstmt: if condition then . sep_open_curl stmt sep_closed_curl ifstmt_rest

    sep_open_curl  shift, and go to state 100


State 83

   65 whilestmt: while condition sep_open_curl . stmt sep_closed_curl

    if     shift, and go to state 12
    while  shift, and go to state 13
    read   shift, and go to state 14
    print  shift, and go to state 15
    id     shift, and go to state 16

    cmpdstmt    go to state 90
    stmtlist    go to state 18
    stmt        go to state 101
    simplstmt   go to state 20
    assignstmt  go to state 21
    iostmt      go to state 22
    structstmt  go to state 23
    ifstmt      go to state 24
    whilestmt   go to state 25


State 84

   57 iostmt: read sep_open_par id . sep_closed_par

    sep_closed_par  shift, and go to state 102


State 85

   58 iostmt: print sep_open_par id . sep_closed_par

    sep_closed_par  shift, and go to state 103


State 86

   19 assignstmt_rest: op_eq expression .

    $default  reduce using rule 19 (assignstmt_rest)


State 87

   21 assignstmt_rest: op_pluseq str_expression .

    $default  reduce using rule 21 (assignstmt_rest)


State 88

   20 assignstmt_rest: arith_assign_sign arith_expression .

    $default  reduce using rule 20 (assignstmt_rest)


State 89

   22 assignstmt_rest: bool_assign_sign bool_expression .

    $default  reduce using rule 22 (assignstmt_rest)


State 90

   59 structstmt: cmpdstmt .

    $default  reduce using rule 59 (structstmt)


State 91

   10 cmpdstmt: stmtlist .
   13 stmtlist_rest: stmtlist .

    sep_semicol  reduce using rule 10 (cmpdstmt)
    sep_semicol  [reduce using rule 13 (stmtlist_rest)]
    $default     reduce using rule 13 (stmtlist_rest)


State 92

   11 stmtlist: stmt sep_semicol stmtlist_rest .

    $default  reduce using rule 11 (stmtlist)


State 93

    7 declaration_rest: op_eq expression sep_semicol .

    $default  reduce using rule 7 (declaration_rest)


State 94

   47 str_term: STRING .

    $default  reduce using rule 47 (str_term)


State 95

   46 str_expression_rest: str_op str_term .

    $default  reduce using rule 46 (str_expression_rest)


State 96

   55 factor: sep_open_par expression sep_closed_par .

    $default  reduce using rule 55 (factor)


State 97

   66 condition: expression relation expression .

    $default  reduce using rule 66 (condition)


State 98

   35 arith_expression_rest: arith_op arith_expression .

    $default  reduce using rule 35 (arith_expression_rest)


State 99

   51 bool_expression_rest: bool_op bool_expression .

    $default  reduce using rule 51 (bool_expression_rest)


State 100

   62 ifstmt: if condition then sep_open_curl . stmt sep_closed_curl ifstmt_rest

    if     shift, and go to state 12
    while  shift, and go to state 13
    read   shift, and go to state 14
    print  shift, and go to state 15
    id     shift, and go to state 16

    cmpdstmt    go to state 90
    stmtlist    go to state 18
    stmt        go to state 104
    simplstmt   go to state 20
    assignstmt  go to state 21
    iostmt      go to state 22
    structstmt  go to state 23
    ifstmt      go to state 24
    whilestmt   go to state 25


State 101

   11 stmtlist: stmt . sep_semicol stmtlist_rest
   65 whilestmt: while condition sep_open_curl stmt . sep_closed_curl

    sep_closed_curl  shift, and go to state 105
    sep_semicol      shift, and go to state 58


State 102

   57 iostmt: read sep_open_par id sep_closed_par .

    $default  reduce using rule 57 (iostmt)


State 103

   58 iostmt: print sep_open_par id sep_closed_par .

    $default  reduce using rule 58 (iostmt)


State 104

   11 stmtlist: stmt . sep_semicol stmtlist_rest
   62 ifstmt: if condition then sep_open_curl stmt . sep_closed_curl ifstmt_rest

    sep_closed_curl  shift, and go to state 106
    sep_semicol      shift, and go to state 58


State 105

   65 whilestmt: while condition sep_open_curl stmt sep_closed_curl .

    $default  reduce using rule 65 (whilestmt)


State 106

   62 ifstmt: if condition then sep_open_curl stmt sep_closed_curl . ifstmt_rest

    else  shift, and go to state 107

    $default  reduce using rule 63 (ifstmt_rest)

    ifstmt_rest  go to state 108


State 107

   64 ifstmt_rest: else . sep_open_curl stmt sep_closed_curl

    sep_open_curl  shift, and go to state 109


State 108

   62 ifstmt: if condition then sep_open_curl stmt sep_closed_curl ifstmt_rest .

    $default  reduce using rule 62 (ifstmt)


State 109

   64 ifstmt_rest: else sep_open_curl . stmt sep_closed_curl

    if     shift, and go to state 12
    while  shift, and go to state 13
    read   shift, and go to state 14
    print  shift, and go to state 15
    id     shift, and go to state 16

    cmpdstmt    go to state 90
    stmtlist    go to state 18
    stmt        go to state 110
    simplstmt   go to state 20
    assignstmt  go to state 21
    iostmt      go to state 22
    structstmt  go to state 23
    ifstmt      go to state 24
    whilestmt   go to state 25


State 110

   11 stmtlist: stmt . sep_semicol stmtlist_rest
   64 ifstmt_rest: else sep_open_curl stmt . sep_closed_curl

    sep_closed_curl  shift, and go to state 111
    sep_semicol      shift, and go to state 58


State 111

   64 ifstmt_rest: else sep_open_curl stmt sep_closed_curl .

    $default  reduce using rule 64 (ifstmt_rest)
